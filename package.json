{
  "name": "mocha-vscode",
  "displayName": "Mocha for VS Code",
  "description": "Run and debug Mocha tests right within VS Code.",
  "publisher": "coderline",
  "version": "1.2.4",
  "icon": "icon.png",
  "engines": {
    "vscode": "^1.83.0"
  },
  "keywords": [
    "mocha",
    "test",
    "bdd",
    "tdd",
    "tap",
    "testing",
    "chai",
    "assertion",
    "ava",
    "jest",
    "tape",
    "jasmine",
    "karma"
  ],
  "categories": [
    "Testing"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false,
      "description": "Test code and configurations are automatically evaluated by this extension."
    }
  },
  "contributes": {
    "configuration": [
      {
        "title": "Mocha for VS Code",
        "properties": {
          "mocha-vscode.extractSettings": {
            "markdownDescription": "Configures how tests get extracted. You can configure:\n\n- The `extractWith` mode, that specifies if tests are extracted.\n  - `evaluation-cjs` (default) Translate the test file to CommonJS and evaluate it with all dependencies mocked.\n  - `evaluation-cjs-full` Translate the test file to CommonJS and fully evaluate it with all dependencies.\n  - `syntax` Parse the file and try to extract the tests from the syntax tree.\n- The `extractTimeout` limiting how long the extraction of tests for a single file is allowed to take.\n- The `test` and `suite` identifiers the process extracts. Defaults to `[\"it\", \"test\"]` and `[\"describe\", \"suite\"]` respectively, covering Mocha's common interfaces.\n- The `hooks` identifiers to avoid Mocha executing stuff on test discovery. Defaults to `[\"before\", \"after\", \"beforeEach\", \"afterEach\"]`\n\n- `mocha-vscode.debugOptions`: options, normally found in the launch.json, to pass when debugging the extension. See [the docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_launch-configuration-attributes) for a complete list of options.",
            "type": "object",
            "properties": {
              "suite": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "test": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "hooks": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "extractWith": {
                "type": "string",
                "enum": [
                  "evaluation-cjs",
                  "evaluation-cjs-full",
                  "syntax"
                ]
              },
              "extractTimeout": {
                "type": "number"
              }
            },
            "default": {
              "suite": [
                "describe",
                "suite"
              ],
              "test": [
                "it",
                "test"
              ],
              "hooks": [
                "before",
                "after",
                "beforeEach",
                "afterEach"
              ],
              "extractWith": "evaluation-cjs",
              "extractTimeout": 10000
            },
            "required": [
              "suite",
              "test",
              "extractWith",
              "extractTimeout"
            ]
          },
          "mocha-vscode.debugOptions": {
            "type": "object",
            "additionalProperties": true,
            "markdownDescription": "Options, normally found in the launch.json, to pass when debugging the extension. See [the docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_launch-configuration-attributes) for a complete list of options."
          },
          "mocha-vscode.env": {
            "type": "object",
            "additionalProperties": true,
            "markdownDescription": "Additional environment variables set when executing tests. This is useful for setting things like `NODE_ENV`."
          }
        }
      }
    ]
  },
  "activationEvents": [
    "workspaceContains:**/.mocharc.{js,cjs,yaml,yml,json,jsonc}",
    "onCommand:mocha-vscode.getControllersForTest"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/CoderLine/mocha-vscode.git"
  },
  "bugs": {
    "url": "https://github.com/CoderLine/mocha-vscode/issues"
  },
  "homepage": "https://github.com/CoderLine/mocha-vscode#readme",
  "main": "./out/extension.js",
  "scripts": {
    "publish:vsce:release": "npx @vscode/vsce publish",
    "publish:vsce:prerelease": "npx @vscode/vsce publish --pre-release",
    "publish:ovsx:release": "npx ovsx publish",
    "publish:ovsx:prerelease": "npx ovsx publish --pre-release",
    "package:test": "npm run compile && tsx ./scripts/prerelease.mts && npx @vscode/vsce package && tsx ./scripts/extractVsix.mts",
    "package:release": "npm run compile && tsx ./scripts/prerelease.mts && npx @vscode/vsce package",
    "package:prerelease": "npm run compile && tsx ./scripts/prerelease.mts --pre-release && npx @vscode/vsce package --pre-release",
    "vscode:prepublish": "npm run compile",
    "postinstall": "cd src/typings && npx @vscode/dts main",
    "clean": "node -e \"fs.rmSync('out',{force:true,recursive:true})\"",
    "compile": "npm run clean && tsc --noEmit && node .esbuild.js --minify",
    "compile:test": "tsc",
    "watch:esbuild": "npm run clean && node .esbuild.js --watch",
    "watch": "npm run clean && tsc --watch",
    "test": "tsc && vscode-test",
    "test:vsix": "tsc && cross-env TEST_MODE=vsix vscode-test",
    "prettier": "prettier --write src",
    "lint": "eslint .",
    "fix": "eslint . --fix"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.1",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@types/chai": "^4.3.17",
    "@types/eslint__js": "^8.42.3",
    "@types/estree": "^1.0.5",
    "@types/extract-zip": "^2.0.1",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.8",
    "@types/node": "22.x",
    "@types/picomatch": "^3.0.1",
    "@types/sinon": "^17.0.3",
    "@types/split2": "^4.2.3",
    "@types/which": "^3.0.4",
    "@types/yargs": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "^8.8.0",
    "@typescript-eslint/parser": "^8.6.0",
    "@typescript-eslint/typescript-estree": "^8.13.0",
    "@vscode/dts": "^0.4.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.2.1",
    "acorn": "^8.13.0",
    "acorn-loose": "^8.4.0",
    "ansi-colors": "^4.1.3",
    "chai": "^4.4.1",
    "cross-env": "^7.0.3",
    "data-uri-to-buffer": "^6.0.2",
    "enhanced-resolve": "^5.17.1",
    "error-stack-parser": "^2.1.4",
    "eslint": "^9.14.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-license-header": "^0.6.1",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-visitor-keys": "^4.1.0",
    "extract-zip": "^2.0.1",
    "glob": "^11.0.0",
    "minimatch": "^10.0.1",
    "mocha": "^10.8.2",
    "prettier": "^3.3.3",
    "prettier-eslint": "^16.3.0",
    "prettier-eslint-cli": "^8.0.1",
    "prettier-plugin-organize-imports": "^4.1.0",
    "sinon": "^19.0.2",
    "split2": "^4.2.0",
    "stacktrace-parser": "^0.1.10",
    "supports-color": "^9.4.0",
    "tar": "^7.4.3",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.2",
    "typescript": "^5.6.2",
    "typescript-eslint": "^8.11.0",
    "which": "^5.0.0"
  },
  "dependencies": {
    "esbuild": "^0.24.0"
  },
  "mocha-vscode": {
    "version": "v1.2.3+d27e65f",
    "date": "2024-10-20T15:38:24.261Z"
  }
}
