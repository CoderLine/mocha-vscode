on:
  release:
    types:
      - created

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  prerelease:
    name: Release (Pre-release)
    runs-on: 'ubuntu-latest'
    if: startsWith(github.ref, 'refs/tags/v') && github.event.release.prerelease
    env:
      GITHUB_CONTEXT: ${{ toJSON(github) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Update NPM (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo npm uninstall -g yarn pnpm
          sudo npm install -g npm@latest
          sudo npm install -g corepack@latest
      - name: Update NPM (Win/MacOS)
        if: runner.os != 'Linux'
        run: |
          npm uninstall -g yarn pnpm
          npm install -g npm@latest
          npm install -g corepack@latest

      - name: Install dependencies
        run: |
          corepack enable
          npm install

      - name: Build and Package
        run: npm run package:release

      - name: Publish (Microsoft Extension Gallery)
        run: npm run publish:vsce:prerelease
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Build and Publish (Open VSX Registry)
        run: npm run publish:ovsx:prerelease
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}


  release:
    name: Release (Full)
    runs-on: 'ubuntu-latest'
    if: startsWith(github.ref, 'refs/tags/v') && !github.event.release.prerelease
    env:
      GITHUB_CONTEXT: ${{ toJSON(github) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm install

      - name: Build and Package
        run: npm run package:release

      - name: Build and Publish (Microsoft Extension Gallery)
        run: npm run publish:vsce:release
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Build and Publish (Open VSX Registry)
        run: npm run publish:ovsx:release
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}
